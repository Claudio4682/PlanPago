// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanPago.Infrastructure.Data;

namespace PlanPago.Infrastructure.Migrations
{
    [DbContext(typeof(PlanPagoContext))]
    partial class PlanPagoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PagoPlan.Core.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PagoPlan.Core.Entities.Cuota", b =>
                {
                    b.Property<int>("CuotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstadoCuota")
                        .HasColumnType("int");

                    b.Property<decimal>("ImporteCuota")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PlanPagoId")
                        .HasColumnType("int");

                    b.HasKey("CuotaId");

                    b.HasIndex("PlanPagoId");

                    b.ToTable("Cuotas");
                });

            modelBuilder.Entity("PagoPlan.Core.Entities.Plan", b =>
                {
                    b.Property<int>("PlanPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantCuotas")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<double>("Interes")
                        .HasColumnType("float")
                        .HasMaxLength(200);

                    b.Property<decimal>("TotalPlan")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PlanPagoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("PlanesPagos");
                });

            modelBuilder.Entity("PagoPlan.Core.Entities.Cuota", b =>
                {
                    b.HasOne("PagoPlan.Core.Entities.Plan", "PlanPago")
                        .WithMany("Cuotas")
                        .HasForeignKey("PlanPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PagoPlan.Core.Entities.Plan", b =>
                {
                    b.HasOne("PagoPlan.Core.Entities.Cliente", "Cliente")
                        .WithMany("Cuotas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
